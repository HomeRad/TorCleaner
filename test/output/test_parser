test_parser
============ syntax tests =============
HTML '<a b="c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML "<a b='c'>"
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b=c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b="c>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error ("AttValue: ' expected\n",)
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b="">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': ''})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML "<a b=''>"
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': ''})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b=>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': ''})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a =c>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error ('error parsing attribute name\n',)
startElement ('a', {})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a =>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error ('error parsing attribute name\n',)
startElement ('a', {})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b= "c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b ="c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b = "c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a >'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '< a>'
startDocument ()
error ('htmlParseStartTag: invalid element name\n',)
endDocument ()
HTML '< a >'
startDocument ()
error ('htmlParseStartTag: invalid element name\n',)
endDocument ()
HTML '<>'
startDocument ()
error ('htmlParseStartTag: invalid element name\n',)
endDocument ()
HTML '< >'
startDocument ()
error ('htmlParseStartTag: invalid element name\n',)
endDocument ()
HTML '<a b=c"><a b="c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b="c><a b="c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error ("AttValue: ' expected\n",)
startElement ('a', {'b': 'c'})
endElement ('a',)
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<!---->'
startDocument ()
comment ('',)
endDocument ()
HTML '<!----->'
startDocument ()
comment ('-',)
endDocument ()
HTML '<!------>'
startDocument ()
comment ('--',)
endDocument ()
HTML '<!------->'
startDocument ()
comment ('---',)
endDocument ()
HTML '<!---- >'
startDocument ()
error ('Comment not terminated \n<!----\n',)
endDocument ()
HTML '<!-- -->'
startDocument ()
comment (' ',)
endDocument ()
HTML '<!-- -- >'
startDocument ()
error ('Comment not terminated \n<!-- --\n',)
endDocument ()
HTML '<!---- />-->'
startDocument ()
comment ('-- />',)
endDocument ()
HTML '</a>'
startDocument ()
error ('Unexpected end tag : a\n',)
endDocument ()
HTML '</ a>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('p', {})
characters (' a>',)
endDocument ()
HTML '</ a >'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('p', {})
characters (' a >',)
endDocument ()
HTML '</a >'
startDocument ()
error ('Unexpected end tag : a\n',)
endDocument ()
HTML '< / a>'
startDocument ()
error ('htmlParseStartTag: invalid element name\n',)
endDocument ()
HTML '< /a>'
startDocument ()
error ('htmlParseStartTag: invalid element name\n',)
endDocument ()
HTML '<a/>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<!DOCTYPE adrbook SYSTEM "adrbook.dtd">'
startDocument ()
endDocument ()
HTML '<?xml version="1.0" encoding="latin1"?>'
startDocument ()
error ('htmlParseStartTag: invalid element name\n',)
endDocument ()
HTML '<script >\n</script>'
startDocument ()
startElement ('html', {})
startElement ('head', {})
startElement ('script', {})
cdataBlock ('\n',)
endElement ('script',)
endElement ('head',)
endElement ('html',)
endDocument ()
HTML '<sCrIpt lang="a">bla </a> fasel</scripT>'
startDocument ()
startElement ('html', {})
startElement ('head', {})
startElement ('script', {'lang': 'a'})
cdataBlock ('bla ',)
error ('Unexpected end tag : a\n',)
cdataBlock (' fasel',)
endElement ('script',)
endElement ('head',)
endElement ('html',)
endDocument ()
HTML '<img bo\\\nrder=0 >'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error ('error parsing attribute name\n',)
startElement ('img', {'bo': None, 'rder': '0'})
endElement ('body',)
endElement ('html',)
endDocument ()
======== sequential feed tests =========
HTML '<a b="c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML "<a b='c'>"
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b=c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b="c>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error ("AttValue: ' expected\n",)
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b="">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': ''})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML "<a b=''>"
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': ''})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b=>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': ''})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a =c>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error ('error parsing attribute name\n',)
startElement ('a', {})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a =>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error ('error parsing attribute name\n',)
startElement ('a', {})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b= "c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b ="c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b = "c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a >'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '< a>'
startDocument ()
error ('htmlParseStartTag: invalid element name\n',)
endDocument ()
HTML '< a >'
startDocument ()
error ('htmlParseStartTag: invalid element name\n',)
endDocument ()
HTML '<>'
startDocument ()
error ('htmlParseStartTag: invalid element name\n',)
endDocument ()
HTML '< >'
startDocument ()
error ('htmlParseStartTag: invalid element name\n',)
endDocument ()
HTML '<a b=c"><a b="c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b="c><a b="c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error ("AttValue: ' expected\n",)
startElement ('a', {'b': 'c'})
endElement ('a',)
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<!---->'
startDocument ()
comment ('',)
endDocument ()
HTML '<!----->'
startDocument ()
comment ('-',)
endDocument ()
HTML '<!------>'
startDocument ()
comment ('--',)
endDocument ()
HTML '<!------->'
startDocument ()
comment ('---',)
endDocument ()
HTML '<!---- >'
startDocument ()
error ('Comment not terminated \n<!----\n',)
endDocument ()
HTML '<!-- -->'
startDocument ()
comment (' ',)
endDocument ()
HTML '<!-- -- >'
startDocument ()
error ('Comment not terminated \n<!-- --\n',)
endDocument ()
HTML '<!---- />-->'
startDocument ()
comment ('-- />',)
endDocument ()
HTML '</a>'
startDocument ()
error ('Unexpected end tag : a\n',)
endDocument ()
HTML '</ a>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('p', {})
characters (' a>',)
endDocument ()
HTML '</ a >'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('p', {})
characters (' a >',)
endDocument ()
HTML '</a >'
startDocument ()
error ('Unexpected end tag : a\n',)
endDocument ()
HTML '< / a>'
startDocument ()
error ('htmlParseStartTag: invalid element name\n',)
endDocument ()
HTML '< /a>'
startDocument ()
error ('htmlParseStartTag: invalid element name\n',)
endDocument ()
HTML '<a/>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<!DOCTYPE adrbook SYSTEM "adrbook.dtd">'
startDocument ()
endDocument ()
HTML '<?xml version="1.0" encoding="latin1"?>'
startDocument ()
error ('htmlParseStartTag: invalid element name\n',)
endDocument ()
HTML '<script >\n</script>'
startDocument ()
startElement ('html', {})
startElement ('head', {})
startElement ('script', {})
cdataBlock ('\n',)
endElement ('script',)
endElement ('head',)
endElement ('html',)
endDocument ()
HTML '<sCrIpt lang="a">bla </a> fasel</scripT>'
startDocument ()
startElement ('html', {})
startElement ('head', {})
startElement ('script', {'lang': 'a'})
cdataBlock ('bla ',)
error ('Unexpected end tag : a\n',)
cdataBlock (' fasel',)
endElement ('script',)
endElement ('head',)
endElement ('html',)
endDocument ()
HTML '<img bo\\\nrder=0 >'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error ('error parsing attribute name\n',)
startElement ('img', {'bo': None, 'rder': '0'})
endElement ('body',)
endElement ('html',)
endDocument ()
===== subsequent interwoven parsing ====
startDocument ()
startElement ('html', {})
endElement ('html',)
endDocument ()
startDocument ()
startElement ('html', {})
endElement ('html',)
endDocument ()
============= reset test ===============
startDocument ()
endDocument ()
============ flush tests ===============
FLUSH test <
startDocument ()
endDocument ()
FLUSH test <a
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {})
error ("Couldn't find end of Start Tag a\n",)
endElement ('body',)
endElement ('html',)
endDocument ()
FLUSH test <!a
startDocument ()
endDocument ()
FLUSH test <?a
startDocument ()
error ('htmlParseStartTag: invalid element name\n',)
endDocument ()
startDocument ()
startElement ('html', {})
startElement ('head', {})
ignorableWhitespace ('\n',)
comment (' closing > before end of tag ',)
ignorableWhitespace ('\n',)
comment (' <META NAME="Author" CONTENT="Andrew McDonald <andrew@mcdonald.org.uk>"> ',)
ignorableWhitespace ('\n     ',)
startElement ('meta', {'name': 'Author', 'content': 'Andrew McDonald <andrew@mcdonald.org.uk>'})
ignorableWhitespace ('\n     \n',)
comment (' meta refresh tag ',)
ignorableWhitespace ('\n',)
comment (' <meta http-equiv="refresh"> ',)
ignorableWhitespace ('\n     ',)
startElement ('meta', {'http-equiv': 'refresh'})
ignorableWhitespace ('\n\n',)
comment (' meta ReFresh tag ',)
ignorableWhitespace ('\n',)
comment (' <meta http-equiv="ReFresh"> ',)
ignorableWhitespace ('\n     ',)
startElement ('meta', {'http-equiv': 'ReFresh'})
ignorableWhitespace ('\n\n',)
comment (' meta refrish tag ',)
ignorableWhitespace ('\n',)
comment (' <meta http-equiv="Refrish"> ',)
ignorableWhitespace ('\n     ',)
startElement ('meta', {'http-equiv': 'Refrish'})
ignorableWhitespace ('\n\n',)
comment (' IE shortcut icon and </link> end tag ',)
ignorableWhitespace ('\n',)
comment (' <link rel="shortcut icon"></link> ',)
ignorableWhitespace ('\n     ',)
startElement ('link', {'rel': 'shortcut icon'})
error ('Unexpected end tag : link\n',)
ignorableWhitespace ('\n',)
comment (' missing start tag ',)
ignorableWhitespace ('\n',)
error ('Unexpected end tag : title\n',)
ignorableWhitespace ('\n',)
endElement ('head',)
ignorableWhitespace ('\n\n',)
comment (' javascript in body tag ',)
ignorableWhitespace ('\n',)
comment (' <body onload="hulla();" onunload="holla();"> ',)
ignorableWhitespace ('\n     ',)
startElement ('body', {'onunload': 'holla();', 'onload': 'hulla();'})
ignorableWhitespace ('\n\n',)
comment (' advert links ',)
ignorableWhitespace ('\n',)
comment (' <a href="http://www.doubleclick.net/">image data and such...</a> ',)
ignorableWhitespace ('\n     ',)
startElement ('a', {'href': 'http://www.doubleclick.net/'})
characters ('image data and such...',)
endElement ('a',)
ignorableWhitespace ('\n',)
comment (' <a href="http://ads.freshmeat.net/">...</a> ',)
ignorableWhitespace ('\n     ',)
startElement ('a', {'href': 'http://ads.freshmeat.net/'})
characters ('...',)
endElement ('a',)
ignorableWhitespace ('\n\n',)
comment (' replace blink with bold ',)
ignorableWhitespace ('\n',)
comment (' <blink>blinking text</blink> ',)
ignorableWhitespace ('\n     ',)
startElement ('blink', {})
error ('Tag blink invalid\n',)
characters ('blinking text',)
endElement ('blink',)
ignorableWhitespace ('\n\n',)
comment (' remove noscript tag ',)
ignorableWhitespace ('\n',)
comment (' <noscript>Kein Javascript</noscript> ',)
ignorableWhitespace ('\n     ',)
startElement ('noscript', {})
characters ('Kein Javascript',)
endElement ('noscript',)
ignorableWhitespace ('\n\n',)
comment (' transform erotic link :) ',)
ignorableWhitespace ('\n',)
comment (' <a href="http://playboy.com/issue/">blubba</a> ',)
ignorableWhitespace ('\n     ',)
startElement ('a', {'href': 'http://playboy.com/issue/'})
characters ('blubba',)
endElement ('a',)
ignorableWhitespace ('\n\n',)
comment (' redirect ',)
ignorableWhitespace ('\n',)
comment (' <a href="http://www.fileleech.com/dl/?filepath=http://www.counter-strike.de/downloads/ghl10full.exe&download=1">CS 1.0</a> ',)
ignorableWhitespace ('\n     ',)
error ("htmlParseEntityRef: expecting ';'\n",)
startElement ('a', {'href': 'http://www.fileleech.com/dl/?filepath=http://www.counter-strike.de/downloads/ghl10full.exe&download=1'})
characters ('CS 1.0',)
endElement ('a',)
ignorableWhitespace ('\n\n',)
comment (' unquoted ampersand ',)
ignorableWhitespace ('\n',)
comment (' Hallo Ernie & Bert, was geht? ',)
startElement ('p', {})
characters ('\n     Hallo Ernie ',)
error ('htmlParseEntityRef: no name\n',)
characters ('&',)
characters (' Bert, was geht?\n\n',)
comment (' entityrefs, should be left as is ',)
characters ('\n',)
comment (' Hallo Ernie &amp; Bert, was geht &lt;ab&gt;&#183;? ',)
characters ('\n     Hallo Ernie ',)
characters ('&',)
characters (' Bert, was geht ',)
characters ('<',)
characters ('ab',)
characters ('>',)
characters ('\xc2\xb7',)
characters ('?\n\n',)
comment (' 1x1 image ',)
characters ('\n',)
comment (' <img src="blubb" width="1" height="1"> ',)
characters ('\n     ',)
startElement ('img', {'height': '1', 'src': 'blubb', 'width': '1'})
characters ('\n\n',)
comment (' adlog.pl (freshmeat) ',)
characters ('\n',)
comment (" <a href='http://fmads.osdn.com/cgi-bin/adlog.pl?index,tkgk0128en'></a> ",)
characters ('\n',)
startElement ('a', {'href': 'http://fmads.osdn.com/cgi-bin/adlog.pl?index,tkgk0128en'})
endElement ('a',)
characters ('\n\n',)
comment (' unquoted attribute ending with slash ',)
characters ('\n',)
comment (' <a href=http://www/>link</a> ',)
characters ('\n',)
startElement ('a', {'href': 'http://www/'})
characters ('link',)
endElement ('a',)
characters ('\n\n',)
comment (' illegal binary chars (see source) ',)
characters ('\nThese \xc2\x91Microsoft chars\xc2\x91 are history.\n\xc2\x84Retter\xc2\x84 Majak trifft in der Schlussminute.\n',)
comment (' bad quote in tag attributes ',)
characters ('\n',)
comment (' <a href="bla" %]">seen at slashdot</a> ',)
characters ('\n',)
error ('error parsing attribute name\n',)
startElement ('a', {'href': 'bla'})
characters ('seen at slashdot',)
endElement ('a',)
characters ('\n\n',)
comment (' no beginning quote ',)
characters ('\n',)
comment (' <a href=bla">link</a> ',)
characters ('\n',)
startElement ('a', {'href': 'bla'})
characters ('link',)
endElement ('a',)
characters ('\n\n',)
comment (' no ending quote ',)
characters ('\n',)
comment (' <a href="bla>link</a> ',)
characters ('\n',)
startElement ('a', {'href': 'bla'})
characters ('link',)
endElement ('a',)
characters ('\n\n',)
endElement ('p',)
endElement ('body',)
endElement ('html',)
ignorableWhitespace ('\n',)
endDocument ()
finished
