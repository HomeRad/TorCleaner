test_parser
============ syntax tests =============
HTML '<a b="c">'
startElement ('a', {'b': 'c'})
HTML "<a b='c'>"
startElement ('a', {'b': 'c'})
HTML '<a b=c">'
startElement ('a', {'b': 'c&quot;'})
HTML '<a b="c>'
characters ('<a b="c>',)
HTML '<a b="">'
startElement ('a', {'b': '""'})
HTML "<a b=''>"
startElement ('a', {'b': '""'})
HTML '<a b=>'
startElement ('a', {'b': '""'})
HTML '<a =c>'
startElement ('a', {'c': None})
HTML '<a =>'
startElement ('a', {})
HTML '<a b= "c">'
startElement ('a', {'b': 'c'})
HTML '<a b ="c">'
startElement ('a', {'b': 'c'})
HTML '<a b = "c">'
startElement ('a', {'b': 'c'})
HTML '<a >'
startElement ('a', {})
HTML '< a>'
startElement ('a', {})
HTML '< a >'
startElement ('a', {})
HTML '<>'
characters ('<>',)
HTML '< >'
characters ('< >',)
HTML '<a b="c"><'
startElement ('a', {'b': 'c'})
characters ('<',)
HTML 'd>'
characters ('d>',)
HTML '<h1>bla</h1>'
startElement ('h1', {})
characters ('bla',)
endElement ('h1',)
HTML '<a b=c"><a b="c">'
startElement ('a', {'b': 'c&quot;'})
startElement ('a', {'b': 'c'})
HTML '<a b="c><a b="c">'
startElement ('a', {'c': None, 'b': '"c><a b="'})
HTML '<a b=/c/></a><br>'
startElement ('a', {'b': '"/c/"'})
endElement ('a',)
startElement ('br', {})
HTML '<br/>'
startElement ('br', {})
HTML '<a b="50%"><br>'
startElement ('a', {'b': '50%'})
startElement ('br', {})
HTML '<!---->'
comment ('',)
HTML '<!----->'
comment ('-',)
HTML '<!------>'
comment ('--',)
HTML '<!------->'
comment ('---',)
HTML '<!---- >'
characters ('<!---- >',)
HTML '<!-- -->'
comment (' ',)
HTML '<!-- -- >'
characters ('<!-- -- >',)
HTML '<!---- />-->'
comment ('-- />',)
HTML '</a>'
endElement ('a',)
HTML '</ a>'
endElement ('a',)
HTML '</ a >'
endElement ('a',)
HTML '</a >'
endElement ('a',)
HTML '< / a>'
endElement ('a',)
HTML '< /a>'
endElement ('a',)
HTML '</td <td a="b" >'
endElement ('td',)
startElement ('td', {'a': 'b'})
HTML '<a/>'
startElement ('a', {})
endElement ('a',)
HTML '<!DOCtype adrbook SYSTEM "adrbook.dtd">'
doctype (' adrbook SYSTEM "adrbook.dtd"',)
HTML '<?xmL version="1.0" encoding="latin1"?>'
pi ('xmL version="1.0" encoding="latin1"',)
HTML '<script >\n</script>'
startElement ('script', {})
characters ('\n',)
endElement ('script',)
HTML '<sCrIpt lang="a">bla </a> fasel</scripT>'
startElement ('script', {'lang': 'a'})
characters ('bla </a> fasel',)
endElement ('script',)
HTML '<img bo\\\nrder=0 >'
startElement ('img', {'bo': None, 'rder': '0'})
HTML '<a href="123$456">'
startElement ('a', {'href': '123$456'})
HTML '<a href=/>'
startElement ('a', {'href': '""'})
endElement ('a',)
HTML '<a href="\'">'
startElement ('a', {'href': '"\'"'})
HTML '<a href=\'"\'>'
startElement ('a', {'href': '&quot;'})
HTML '<a href="&#109;ailto:">'
startElement ('a', {'href': 'mailto:'})
======== sequential feed tests =========
HTML '<a b="c">'
startElement ('a', {'b': 'c'})
HTML "<a b='c'>"
startElement ('a', {'b': 'c'})
HTML '<a b=c">'
startElement ('a', {'b': 'c&quot;'})
HTML '<a b="c>'
characters ('<a b="c>',)
HTML '<a b="">'
startElement ('a', {'b': '""'})
HTML "<a b=''>"
startElement ('a', {'b': '""'})
HTML '<a b=>'
startElement ('a', {'b': '""'})
HTML '<a =c>'
startElement ('a', {'c': None})
HTML '<a =>'
startElement ('a', {})
HTML '<a b= "c">'
startElement ('a', {'b': 'c'})
HTML '<a b ="c">'
startElement ('a', {'b': 'c'})
HTML '<a b = "c">'
startElement ('a', {'b': 'c'})
HTML '<a >'
startElement ('a', {})
HTML '< a>'
startElement ('a', {})
HTML '< a >'
startElement ('a', {})
HTML '<>'
characters ('<>',)
HTML '< >'
characters ('< >',)
HTML '<a b="c"><'
startElement ('a', {'b': 'c'})
characters ('<',)
HTML 'd>'
characters ('d',)
characters ('>',)
HTML '<h1>bla</h1>'
startElement ('h1', {})
characters ('b',)
characters ('l',)
characters ('a',)
endElement ('h1',)
HTML '<a b=c"><a b="c">'
startElement ('a', {'b': 'c&quot;'})
startElement ('a', {'b': 'c'})
HTML '<a b="c><a b="c">'
startElement ('a', {'c': None, 'b': '"c><a b="'})
HTML '<a b=/c/></a><br>'
startElement ('a', {'b': '"/c/"'})
endElement ('a',)
startElement ('br', {})
HTML '<br/>'
startElement ('br', {})
HTML '<a b="50%"><br>'
startElement ('a', {'b': '50%'})
startElement ('br', {})
HTML '<!---->'
comment ('',)
HTML '<!----->'
comment ('-',)
HTML '<!------>'
comment ('--',)
HTML '<!------->'
comment ('---',)
HTML '<!---- >'
characters ('<!---- >',)
HTML '<!-- -->'
comment (' ',)
HTML '<!-- -- >'
characters ('<!-- -- >',)
HTML '<!---- />-->'
comment ('-- />',)
HTML '</a>'
endElement ('a',)
HTML '</ a>'
endElement ('a',)
HTML '</ a >'
endElement ('a',)
HTML '</a >'
endElement ('a',)
HTML '< / a>'
endElement ('a',)
HTML '< /a>'
endElement ('a',)
HTML '</td <td a="b" >'
endElement ('td',)
startElement ('td', {'a': 'b'})
HTML '<a/>'
startElement ('a', {})
endElement ('a',)
HTML '<!DOCtype adrbook SYSTEM "adrbook.dtd">'
doctype (' adrbook SYSTEM "adrbook.dtd"',)
HTML '<?xmL version="1.0" encoding="latin1"?>'
pi ('xmL version="1.0" encoding="latin1"',)
HTML '<script >\n</script>'
startElement ('script', {})
characters ('\n',)
endElement ('script',)
HTML '<sCrIpt lang="a">bla </a> fasel</scripT>'
startElement ('script', {'lang': 'a'})
characters ('bla </a> fasel',)
endElement ('script',)
HTML '<img bo\\\nrder=0 >'
startElement ('img', {'bo': None, 'rder': '0'})
HTML '<a href="123$456">'
startElement ('a', {'href': '123$456'})
HTML '<a href=/>'
startElement ('a', {'href': '"/"'})
HTML '<a href="\'">'
startElement ('a', {'href': '"\'"'})
HTML '<a href=\'"\'>'
startElement ('a', {'href': '&quot;'})
HTML '<a href="&#109;ailto:">'
startElement ('a', {'href': 'mailto:'})
===== subsequent interwoven parsing ====
startElement ('html', {})
startElement ('html', {})
============= reset test ===============
characters ('>',)
============ flush tests ===============
FLUSH test <
characters ('<',)
FLUSH test <a
characters ('<a',)
FLUSH test <!a
characters ('<!a',)
FLUSH test <?a
characters ('<?a',)
finished
