test_parser
============ syntax tests =============
HTML '<a b="c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML "<a b='c'>"
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b=c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b="c>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error (1, 2, "AttValue: ' expected\n")
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b="">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': ''})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML "<a b=''>"
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': ''})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b=>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': ''})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a =c>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error (1, 2, 'error parsing attribute name\n')
startElement ('a', {})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a =>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error (1, 2, 'error parsing attribute name\n')
startElement ('a', {})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b= "c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b ="c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b = "c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a >'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '< a>'
startDocument ()
error (1, 1, 'htmlParseStartTag: invalid element name\n')
endDocument ()
HTML '< a >'
startDocument ()
error (1, 1, 'htmlParseStartTag: invalid element name\n')
endDocument ()
HTML '<>'
startDocument ()
error (1, 1, 'htmlParseStartTag: invalid element name\n')
endDocument ()
HTML '< >'
startDocument ()
error (1, 1, 'htmlParseStartTag: invalid element name\n')
endDocument ()
HTML '<a b=c"><a b="c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b="c><a b="c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error (1, 2, "AttValue: ' expected\n")
startElement ('a', {'b': 'c'})
endElement ('a',)
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<!---->'
startDocument ()
mycomment 
endDocument ()
HTML '<!----->'
startDocument ()
mycomment -
endDocument ()
HTML '<!------>'
startDocument ()
mycomment --
endDocument ()
HTML '<!------->'
startDocument ()
mycomment ---
endDocument ()
HTML '<!---- >'
startDocument ()
error (1, 5, 'Comment not terminated \n<!----\n')
endDocument ()
HTML '<!-- -->'
startDocument ()
mycomment  
endDocument ()
HTML '<!-- -- >'
startDocument ()
error (1, 6, 'Comment not terminated \n<!-- --\n')
endDocument ()
HTML '<!---- />-->'
startDocument ()
mycomment -- />
endDocument ()
HTML '</a>'
startDocument ()
error (1, 1, 'Unexpected end tag : a\n')
endDocument ()
HTML '</ a>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('p', {})
characters (' a&gt;',)
endDocument ()
HTML '</ a >'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('p', {})
characters (' a &gt;',)
endDocument ()
HTML '</a >'
startDocument ()
error (1, 2, 'Unexpected end tag : a\n')
endDocument ()
HTML '< / a>'
startDocument ()
error (1, 1, 'htmlParseStartTag: invalid element name\n')
endDocument ()
HTML '< /a>'
startDocument ()
error (1, 1, 'htmlParseStartTag: invalid element name\n')
endDocument ()
HTML '<a/>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<!DOCTYPE adrbook SYSTEM "adrbook.dtd">'
startDocument ()
endDocument ()
HTML '<?xml version="1.0" encoding="latin1"?>'
startDocument ()
error (1, 1, 'htmlParseStartTag: invalid element name\n')
endDocument ()
HTML '<script >\n</script>'
startDocument ()
startElement ('html', {})
startElement ('head', {})
startElement ('script', {})
cdataBlock ('\n',)
endElement ('script',)
endElement ('head',)
endElement ('html',)
endDocument ()
HTML '<sCrIpt lang="a">bla </a> fasel</scripT>'
startDocument ()
startElement ('html', {})
startElement ('head', {})
startElement ('script', {'lang': 'a'})
cdataBlock ('bla ',)
error (1, 2, 'Unexpected end tag : a\n')
cdataBlock (' fasel',)
endElement ('script',)
endElement ('head',)
endElement ('html',)
endDocument ()
HTML '<img bo\\\nrder=0 >'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error (1, 2, 'error parsing attribute name\n')
startElement ('img', {'bo': None, 'rder': '0'})
endElement ('body',)
endElement ('html',)
endDocument ()
======== sequential feed tests =========
HTML '<a b="c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML "<a b='c'>"
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b=c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b="c>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error (1, 2, "AttValue: ' expected\n")
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b="">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': ''})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML "<a b=''>"
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': ''})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b=>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': ''})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a =c>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error (1, 2, 'error parsing attribute name\n')
startElement ('a', {})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a =>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error (1, 2, 'error parsing attribute name\n')
startElement ('a', {})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b= "c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b ="c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b = "c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a >'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '< a>'
startDocument ()
error (1, 1, 'htmlParseStartTag: invalid element name\n')
endDocument ()
HTML '< a >'
startDocument ()
error (1, 1, 'htmlParseStartTag: invalid element name\n')
endDocument ()
HTML '<>'
startDocument ()
error (1, 1, 'htmlParseStartTag: invalid element name\n')
endDocument ()
HTML '< >'
startDocument ()
error (1, 1, 'htmlParseStartTag: invalid element name\n')
endDocument ()
HTML '<a b=c"><a b="c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {'b': 'c'})
endElement ('a',)
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<a b="c><a b="c">'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error (1, 2, "AttValue: ' expected\n")
startElement ('a', {'b': 'c'})
endElement ('a',)
startElement ('a', {'b': 'c'})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<!---->'
startDocument ()
mycomment 
endDocument ()
HTML '<!----->'
startDocument ()
mycomment -
endDocument ()
HTML '<!------>'
startDocument ()
mycomment --
endDocument ()
HTML '<!------->'
startDocument ()
mycomment ---
endDocument ()
HTML '<!---- >'
startDocument ()
error (1, 5, 'Comment not terminated \n<!----\n')
endDocument ()
HTML '<!-- -->'
startDocument ()
mycomment  
endDocument ()
HTML '<!-- -- >'
startDocument ()
error (1, 6, 'Comment not terminated \n<!-- --\n')
endDocument ()
HTML '<!---- />-->'
startDocument ()
mycomment -- />
endDocument ()
HTML '</a>'
startDocument ()
error (1, 1, 'Unexpected end tag : a\n')
endDocument ()
HTML '</ a>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('p', {})
characters (' a&gt;',)
endDocument ()
HTML '</ a >'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('p', {})
characters (' a &gt;',)
endDocument ()
HTML '</a >'
startDocument ()
error (1, 2, 'Unexpected end tag : a\n')
endDocument ()
HTML '< / a>'
startDocument ()
error (1, 1, 'htmlParseStartTag: invalid element name\n')
endDocument ()
HTML '< /a>'
startDocument ()
error (1, 1, 'htmlParseStartTag: invalid element name\n')
endDocument ()
HTML '<a/>'
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {})
endElement ('a',)
endElement ('body',)
endElement ('html',)
endDocument ()
HTML '<!DOCTYPE adrbook SYSTEM "adrbook.dtd">'
startDocument ()
endDocument ()
HTML '<?xml version="1.0" encoding="latin1"?>'
startDocument ()
error (1, 1, 'htmlParseStartTag: invalid element name\n')
endDocument ()
HTML '<script >\n</script>'
startDocument ()
startElement ('html', {})
startElement ('head', {})
startElement ('script', {})
cdataBlock ('\n',)
endElement ('script',)
endElement ('head',)
endElement ('html',)
endDocument ()
HTML '<sCrIpt lang="a">bla </a> fasel</scripT>'
startDocument ()
startElement ('html', {})
startElement ('head', {})
startElement ('script', {'lang': 'a'})
cdataBlock ('bla ',)
error (1, 2, 'Unexpected end tag : a\n')
cdataBlock (' fasel',)
endElement ('script',)
endElement ('head',)
endElement ('html',)
endDocument ()
HTML '<img bo\\\nrder=0 >'
startDocument ()
startElement ('html', {})
startElement ('body', {})
error (1, 2, 'error parsing attribute name\n')
startElement ('img', {'bo': None, 'rder': '0'})
endElement ('body',)
endElement ('html',)
endDocument ()
===== subsequent interwoven parsing ====
startDocument ()
startElement ('html', {})
endElement ('html',)
endDocument ()
startDocument ()
startElement ('html', {})
endElement ('html',)
endDocument ()
============= reset test ===============
startDocument ()
endDocument ()
============ flush tests ===============
FLUSH test <
startDocument ()
endDocument ()
FLUSH test <a
startDocument ()
startElement ('html', {})
startElement ('body', {})
startElement ('a', {})
error (1, 1, "Couldn't find end of Start Tag a\n")
endElement ('body',)
endElement ('html',)
endDocument ()
FLUSH test <!a
startDocument ()
endDocument ()
FLUSH test <?a
startDocument ()
error (1, 1, 'htmlParseStartTag: invalid element name\n')
endDocument ()
startDocument ()
startElement ('html', {})
startElement ('head', {})
ignorableWhitespace ('\n',)
mycomment  closing > before end of tag 
ignorableWhitespace ('\n',)
mycomment  <META NAME="Author" CONTENT="Andrew McDonald <andrew@mcdonald.org.uk>"> 
ignorableWhitespace ('\n     ',)
startElement ('meta', {'name': 'Author', 'content': 'Andrew McDonald <andrew@mcdonald.org.uk>'})
ignorableWhitespace ('\n     \n',)
mycomment  meta refresh tag 
ignorableWhitespace ('\n',)
mycomment  <meta http-equiv="refresh"> 
ignorableWhitespace ('\n     ',)
startElement ('meta', {'http-equiv': 'refresh'})
ignorableWhitespace ('\n\n',)
mycomment  meta ReFresh tag 
ignorableWhitespace ('\n',)
mycomment  <meta http-equiv="ReFresh"> 
ignorableWhitespace ('\n     ',)
startElement ('meta', {'http-equiv': 'ReFresh'})
ignorableWhitespace ('\n\n',)
mycomment  meta refrish tag 
ignorableWhitespace ('\n',)
mycomment  <meta http-equiv="Refrish"> 
ignorableWhitespace ('\n     ',)
startElement ('meta', {'http-equiv': 'Refrish'})
ignorableWhitespace ('\n\n',)
mycomment  IE shortcut icon and </link> end tag 
ignorableWhitespace ('\n',)
mycomment  <link rel="shortcut icon"></link> 
ignorableWhitespace ('\n     ',)
startElement ('link', {'rel': 'shortcut icon'})
error (21, 7, 'Unexpected end tag : link\n')
ignorableWhitespace ('\n',)
mycomment  missing start tag 
ignorableWhitespace ('\n',)
error (23, 1, 'Unexpected end tag : title\n')
ignorableWhitespace ('\n',)
endElement ('head',)
ignorableWhitespace ('\n\n',)
mycomment  javascript in body tag 
ignorableWhitespace ('\n',)
mycomment  <body onload="hulla();" onunload="holla();"> 
ignorableWhitespace ('\n     ',)
startElement ('body', {'onunload': 'holla();', 'onload': 'hulla();'})
ignorableWhitespace ('\n\n',)
mycomment  advert links 
ignorableWhitespace ('\n',)
mycomment  <a href="http://www.doubleclick.net/">image data and such...</a> 
ignorableWhitespace ('\n     ',)
startElement ('a', {'href': 'http://www.doubleclick.net/'})
characters ('image data and such...',)
endElement ('a',)
ignorableWhitespace ('\n',)
mycomment  <a href="http://ads.freshmeat.net/">...</a> 
ignorableWhitespace ('\n     ',)
startElement ('a', {'href': 'http://ads.freshmeat.net/'})
characters ('...',)
endElement ('a',)
ignorableWhitespace ('\n\n',)
mycomment  replace blink with bold 
ignorableWhitespace ('\n',)
mycomment  <blink>blinking text</blink> 
ignorableWhitespace ('\n     ',)
startElement ('blink', {})
error (38, 6, 'Tag blink invalid\n')
characters ('blinking text',)
endElement ('blink',)
ignorableWhitespace ('\n\n',)
mycomment  remove noscript tag 
ignorableWhitespace ('\n',)
mycomment  <noscript>Kein Javascript</noscript> 
ignorableWhitespace ('\n     ',)
startElement ('noscript', {})
characters ('Kein Javascript',)
endElement ('noscript',)
ignorableWhitespace ('\n\n',)
mycomment  transform erotic link :) 
ignorableWhitespace ('\n',)
mycomment  <a href="http://playboy.com/issue/">blubba</a> 
ignorableWhitespace ('\n     ',)
startElement ('a', {'href': 'http://playboy.com/issue/'})
characters ('blubba',)
endElement ('a',)
ignorableWhitespace ('\n\n',)
mycomment  redirect 
ignorableWhitespace ('\n',)
mycomment  <a href="http://www.fileleech.com/dl/?filepath=http://www.counter-strike.de/downloads/ghl10full.exe&download=1">CS 1.0</a> 
ignorableWhitespace ('\n     ',)
error (50, 7, "htmlParseEntityRef: expecting ';'\n")
startElement ('a', {'href': 'http://www.fileleech.com/dl/?filepath=http://www.counter-strike.de/downloads/ghl10full.exe&download=1'})
characters ('CS 1.0',)
endElement ('a',)
ignorableWhitespace ('\n\n',)
mycomment  unquoted ampersand 
ignorableWhitespace ('\n',)
mycomment  Hallo Ernie & Bert, was geht? 
startElement ('p', {})
characters ('\n     Hallo Ernie ',)
error (54, 18, 'htmlParseEntityRef: no name\n')
characters ('&amp;',)
characters (' Bert, was geht?\n\n',)
mycomment  entityrefs, should be left as is 
characters ('\n',)
mycomment  Hallo Ernie &amp; Bert, was geht &lt;ab&gt;&#183;? 
characters ('\n     Hallo Ernie ',)
characters ('&amp;',)
characters (' Bert, was geht ',)
characters ('&lt;',)
characters ('ab',)
characters ('&gt;',)
characters ('&middot;',)
characters ('?\n\n',)
mycomment  1x1 image 
characters ('\n',)
mycomment  <img src="blubb" width="1" height="1"> 
characters ('\n     ',)
startElement ('img', {'height': '1', 'src': 'blubb', 'width': '1'})
characters ('\n\n',)
mycomment  adlog.pl (freshmeat) 
characters ('\n',)
mycomment  <a href='http://fmads.osdn.com/cgi-bin/adlog.pl?index,tkgk0128en'></a> 
characters ('\n',)
startElement ('a', {'href': 'http://fmads.osdn.com/cgi-bin/adlog.pl?index,tkgk0128en'})
endElement ('a',)
characters ('\n\n',)
mycomment  unquoted attribute ending with slash 
characters ('\n',)
mycomment  <a href=http://www/>link</a> 
characters ('\n',)
startElement ('a', {'href': 'http://www/'})
characters ('link',)
endElement ('a',)
characters ('\n\n',)
mycomment  illegal binary chars (see source) 
characters ('\nThese &#145;Microsoft chars&#145; are history.\n&#132;Retter&#132; Majak trifft in der Schlussminute.\n',)
mycomment  bad quote in tag attributes 
characters ('\n',)
mycomment  <a href="bla" %]">seen at slashdot</a> 
characters ('\n',)
error (77, 15, 'error parsing attribute name\n')
startElement ('a', {'href': 'bla'})
characters ('seen at slashdot',)
endElement ('a',)
characters ('\n\n',)
mycomment  no beginning quote 
characters ('\n',)
mycomment  <a href=bla">link</a> 
characters ('\n',)
startElement ('a', {'href': 'bla'})
characters ('link',)
endElement ('a',)
characters ('\n\n',)
mycomment  no ending quote 
characters ('\n',)
mycomment  <a href="bla>link</a> 
characters ('\n',)
startElement ('a', {'href': 'bla'})
characters ('link',)
endElement ('a',)
characters ('\n\n',)
startElement ('script', {'defer': None, 'type': 'text/javascript'})
cdataBlock ('\n<!-- Hide code for older browsers...\n// window instance\nw = self;\n\nfunction finish() {\n    w.defaultStatus = "";\n}\n\nfunction get_date() {\n    var d = new Date();\n    today = "" + d.getDate() +"."+ (d.getMonth()+ 1) + "." + d.getYear();\n    return today;\n}\n\nfunction get_time() {\n    var now = new Date();\n    var hours = now.getHours();\n    var minutes = now.getMinutes();\n    var seconds = now.getSeconds();\n    var timeValue = "" + hours;\n    timeValue += ((minutes < 10) ? ":0" : ":") + minutes;\n    timeValue += ((seconds < 10) ? ":0" : ":") + seconds;\n    return timeValue;\n}\n\nfunction display() {\n    message = "Calvin w\x03scht angenehmes Surfen am " + get_date() + " um " + get_time () + ".";\n    w.defaultStatus = message;\n}\n// end of script. -->\n',)
endElement ('script',)
characters ('\n\n',)
endElement ('p',)
endElement ('body',)
endElement ('html',)
ignorableWhitespace ('\n',)
endDocument ()
finished
