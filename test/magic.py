#!/usr/bin/python2.3
# -*- coding: iso-8859-1 -*-
"""magic(5) tester"""

d='\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\x03\xedzgX\x93\xcd\xd6\xee\x83T\x05AD\xe9\xd5\xc6V\xdaK\x95"D\xa5\x89\xa0(H\x93&\x86"\x06\x12 @\x04Lb\x05\x01!\x02J\x87\xbc\x80\x14\xa5I\x07\x11\xa2R\xa5w\xa4\x06A\t\xa1\x85\x12\x02$$9\xd1\xd7\xef\xddg\xefk\x9f\xeb;?\xbe\x1f\xe7\xc7\x99\\3\x99gMY\xf7\xac53\xcfZ+a~e\xce\x00\x87.\x9b\x98\x99\x00l\xfb\xd8\x80K\xac\x0f\xc0\\\x11M\xbev\x07\x16\x08\x83\xdf\x81\xf9\xc9\xaa+\xff\x01h_4\xbb\xc2N<p-\xc0\x1b\x1a(k\x06\xf5\x84\x01\xact\x0f`g\x95\xbfF\x00\x00\xfb\xc1}\xe2\xccY\xe6\x1c\xbb\xe2>-vS\xce0\xf6\x19`\xdf\xbf\xb6\x02l\xac\x8a;+\xb3\x01\xec\xec\xec\x00\x13`\x93\x17`\xd5\x7fR\xffN\xb7x\x001\xb6\x17\xc0\xbf&\xb6\x7f{\xfe\x0b\xcd\xca\x01+\x0f8\xcc\'(\xd0\x1b\x06\xfdI<\xf4\x8b\x13\x1b\x8b\xeb\xef\xef\x9f\xbd8\x0e\x8a\x9a\xd8\xcb\x9a\xfa\xc0n\xbb\xf9\xc8Zx{\xdd\t\xf4\x86z\xc9^\x80z\xf9x\xfc\x1c\xc3\xc1\xca\xd2\xbf\xfa\x89\x1d\xfeg\xbf\x0b>\x81\xde\x81A\xee\xff\xda\x83}\x93\xf7\xaf\xd5\x9b\xf8\xb8y\xc1Y\xd4\xfd\xff\x84\xf7k\x86\x03\xfc\x860\xbf\x90\x80\x9f<~\xf5\xf9\x8d\xfcg\x9b\xfc\xa1#\x97\xdd\xfc\xdc\xa0\x1ep\x0f\xd9\x7f\x9d\x048\xf0\xf7\xea~\xe1e\xdf\x121\x84\xf9\xc0\x02d/\xb9\xf9x\x06\xc2\xa0\x1e\xb2\xd6\x1e\x81?1\xc3\x7f\xc9R\xc5\xd3\x93\xd5\xdf\x87Ur\xfdf\xfd\x17%+%\xf5o\x8a\xda\xaf\xf2&\xab\xfc/\x8a\xe6\xafR\xe9\x9f\x94_\x9cv~s\xba\x11\xe0\x06\x85{z\x04\xfc\xef\x9c\xfcX{\xe0?&\xf6\x85\x9f\x13\xfc\xcf\xb7\xfd\x92 \x0f\x97i\x90\xb7\xbb\x07\xfc/m\xfe\x92\xde\xbe\xf3\x7f\xe5\xdf=\xa4\x0f\xdaXY\xc8\xc2\x82=\x02\x02~w\xe4\xf8\xbbM\x9c\xcb\xda\xc7\x1b\xfc\xd7h\xf8\xdfk\xfd+\x81Y9\xf1\x97\xce.\x006\x805`\x04\xfc\xf1\xfb\xa3\xfa\x9f\xf6\xd7\xbf\xd1\x12\x7f\xcf\xf0\xdf\xa4_(\x04\x05\xcd\x0c\rem\xa0\x81n^^\x1e\xee\xff\xb5\x11\xd8~\xef\x91#"\x16n!,Q\x9b\x19\xc9\x9az@=\x02\xdc\x02Y\n\xb8\xe8\x06\xf7\xf8\xbd\x92_\x9a\xe1\xe0;z\xd5\x03!k\xe7\ru\x87!\xe0\xb27\xee\x04\xf9\xde\x86\xbay\xfb\x00\xc0\x11\xf0od,\xfd\x00\x97Y\xd5k\x00\xe0&\xcb\xa2\x9b\x02\xa2\x00\x1b\xf3?\x9d\xe4U\x80\xff\x82;\xec\xb6\x07\xe0\xfe\xe0\xe7X\xe6\x04\xf0\x04\xe0\xe3\xe1\xe1\xd9\xcf\xc3\xb7\x7f?\x9f \xef\x01^\xc1\xa3\x02||\x02GE\x85\x84\x8e\n\t\x89\n\xf2\xfdJ\xbf\xbf\xfesb;\xc8\xcb{\x90\xff\xe0!~\xfeCG\xf8\xf9\xf9\x8f\xfc,\xf8\x8f\xfc5D\xf0\xfff\x02\xe6G@\x90\x87\xb5\x00?v\xb6c\xc0>A6vA6\xe6\x14K\x00\xdc\xccf6\x10\x0b%\'\xdb\xaf\xf4[\xae\xec\xac\xe5pprq\xf3\xec?\xc0\xcb\xf6\xef\x8d\xacs\xce\xfe_\x8d\x87\x006\x0e6\xf6}\x1c\xfb8\xb9\xb9x8\xd9\xf9\xd4Y\x8d\x82\xec\x1cr\x87U9/\\w\x13:\xe6\xffP\x8d\xebH\\V\xd9\xc5\xe3\'\x8eZ}\xba\xad\xae\x11\xf0\xa8\xdf\x90\xfbd\xbc\xf5\xda\xb7u0\\S8\xbb\xfc\xf1)\xa3\x84\x1b\xee\xc6\x9fs\x02\xb5D\x06lf=6*\x9e4\r\x06\xcdm\x9a\xc8\xbf|\xfd\xb4\xf2U\xf3\xd0wrnU\xcb\xf0\x8f-[\xcf\xe0\xf0\xc4\xbc\xea\xd6\x91y\xcaYS;/DDR~M\xdb(a[\x10\xd8\xb7\x8f\x85\x96\xe3\x17&n.N\xcd_\x10\xe4T\x0fs\xb0\x10\xf8\x1f\x13\xe2T{\x18w\xe4\'\x82OV\xfdk\xea\'n\x7f\x0bx\x14oh}\x14\x0c\xd7X?\xc9\xf5\x13\x00\xf7)\xcd\xcf\x03,\x109"\xee\xc66Z\x81\x1e\xb3\x7fC\xf8?#\x90\xff\'\x04\xe68\xc0\xc7\xfe\x8b\xa7 \x00\x02\xe6[\rT@^9\x8c\xb1R& \xfbl\xf2\xbe%-\xc6\x94^\xe1\xca\xb8 \'\x13\x9av\xcf\x99\x9b#\x8c;SM\xbf\x13,\x93\x8d\x93\xd5\x18\x1c\\D\x17\xec/\xa2j\xc4\xacw\xde\x99n\xa5V\xd3\x9c\xa9\xa7Pq\x06 3Osi\xaa\xdf\xc2=/\xb7+\x8e\x91\xdc\x90\xe4\x11*\xfa\n6\xbd\xa5\x9fn\x9b\xcf\xabwd\x0e\x9fH56\xea\xd1K\xe7u5 \xcd\xe3\x19\x02\x13u\x13\xe8\xcd\xd9\x86\xad4\xf6#\\e\x89|>Q\xf4\x9e\xbc\xfc\xbaR\xb8\x97y\xd6DZ\x12z\x9e\x11\xc7\xc8.'

def _main ():
    """USAGE: test/magic.py <filename>"""
    import sys, os
    if len(sys.argv)!=2:
        print _main.__doc__
        sys.exit(1)
    binname = sys.argv[1]
    filename = os.path.join("config", "magic.mime")
    cachename = filename+".mgc"
    from test import initlog
    initlog("test/logging.conf")
    from wc import magic
    #fp = file(binname, 'rb')
    from cStringIO import StringIO
    fp = StringIO(d)
    classify = magic.classify(fp)
    if classify:
        print binname+": "+classify
    else:
        print binname+": Can not recognise file type"

if __name__ == '__main__':
    _main()
