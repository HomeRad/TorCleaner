dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.53)
AC_INIT(webcleaner)
AM_CONFIG_HEADER(config.h:config.h.in)
AM_INIT_AUTOMAKE(webcleaner, 2.5)

AC_PROG_CC
AC_PROG_CXX
AC_DISABLE_SHARED
AC_PROG_LIBTOOL

if test "x$ac_cv_c_compiler_gnu" = "xyes"; then
  CFLAGS="$CFLAGS -Wall -pedantic"
  CXXFLAGS="$CXXFLAGS -Wall -pedantic"
fi

case "$build" in
  *-*-mingw32*)
    AM_CONDITIONAL(WIN32, true)
    AC_DEFINE(NOMINMAX,, [Prevent windows.h from declaring the min()/max() macros.])
  ;;
  *)
    AM_CONDITIONAL(WIN32, false)
  ;;
esac

dnl **********************
dnl *** va_copy checks ***
dnl **********************
dnl we currently check for all three va_copy possibilities, so we get
dnl all results in config.log for bug reports.

AC_CACHE_CHECK([for an implementation of va_copy()],wc_cv_va_copy,[

	AC_LINK_IFELSE([#include <stdarg.h>

	void f (int i, ...) {
	va_list args1, args2;
	va_start (args1, i);
	va_copy (args2, args1);
	if (va_arg (args2, int) != 42 || va_arg (args1, int) != 42)
	  exit (1);
	va_end (args1); va_end (args2);
	}
	int main() {
	  f (0, 42);
	  return 0;
	}],

	[wc_cv_va_copy=yes],

	[wc_cv_va_copy=no])

])

if test "x$wc_cv_va_copy" = "xyes"; then
  AC_DEFINE_UNQUOTED(HAVE_VA_COPY,1, [The 'va_copy' function])
  AC_DEFINE(VA_COPY, va_copy, [The 'va_copy' macro])
fi

AC_CACHE_CHECK([for an implementation of __va_copy()],wc_cv___va_copy,[

	AC_LINK_IFELSE([#include <stdarg.h>

	void f (int i, ...) {
	va_list args1, args2;
	va_start (args1, i);
	__va_copy (args2, args1);
	if (va_arg (args2, int) != 42 || va_arg (args1, int) != 42)
	  exit (1);
	va_end (args1); va_end (args2);
	}
	int main() {
	  f (0, 42);
	  return 0;
	}],

	[wc_cv___va_copy=yes],

	[wc_cv___va_copy=no])

])


if test "x$wc_cv___va_copy" = "xyes"; then
  AC_DEFINE_UNQUOTED(HAVE_VA_COPY,1, [The '__va_copy' function])
  AC_DEFINE(VA_COPY, __va_copy, [The 'va_copy' macro])
fi

AC_CACHE_CHECK([whether va_lists can be copied by value],wc_cv_va_val_copy,[

	AC_TRY_RUN([#include <stdarg.h>

	void f (int i, ...) {
	va_list args1, args2;
	va_start (args1, i);
	args2 = args1;
	if (va_arg (args2, int) != 42 || va_arg (args1, int) != 42)
	  exit (1);
	va_end (args1); va_end (args2);
	}
	int main() {
	  f (0, 42);
	  return 0;
	}],

	[wc_cv_va_val_copy=yes],
	[wc_cv_va_val_copy=no],

	[wc_cv_va_val_copy=yes])

])

if test "x$wc_cv_va_val_copy" = "xno"; then
  AC_DEFINE(HAVE_VA_LIST_AS_ARRAY,1, ['va_lists' cannot be copies as values])
fi

AC_OUTPUT([
Makefile
po/Makefile
libjs/Makefile
libjs/fdlibm/Makefile
])
